/*
 * d-validator
 * https://github.com/jcamelis/d-validator

 * Author: Affiliates Agencies - Combined Products - Front End Team

 * Version: 0.0.1 - 2015-05-27
 * License: MIT
 */
angular.module("d-validator",[]),angular.module("d-validator").directive("dValidator",["dValidatorFactory","dValidatorRegExpFactory","dUnderscoreToCamelCaseFilter","dValidationWrapperFactory",function(a,b,c,d){return{restrict:"A",require:"?ngModel",scope:{definition:"=dValidator"},link:function(e,f,g,h){function i(a){var b=c(a.errorCode);angular.isFunction(h.$validators[b])?(h.$validators[b].multiple||(h.$validators[b]=d(h.$validators[b])),h.$validators[b].addValidation(a)):h.$validators[b]=a}if(!h)throw new TypeError("d-validator depende de ng-model. ng-model no definido en el elemento #"+g.id);var j=[];angular.isArray(e.definition.validations)&&(j=j.concat(e.definition.validations)),angular.isArray(e.definition.regexValidations)&&(j=j.concat(e.definition.regexValidations)),angular.forEach(j,function(c,d){angular.isFunction(c)?c.errorCode?(angular.isFunction(c.watch)&&e.$watch(c.watch,h.$validate),i(c)):i(a("GENERIC_ERROR",c)):i(b(c))})}}}]),angular.module("d-validator").factory("dValidatorFactory",function(){function a(a,b,c){function d(a,c,d){if(!angular.isFunction(b))throw new TypeError("Expected callback to be a function");return b.apply(b,arguments)}return d.errorCode=a,angular.isFunction(c)&&(d.watch=c),d}return a}).factory("dValidatorRegExpFactory",["dValidatorFactory",function(a){function b(b){if(!angular.isString(b.errorCode))throw new TypeError("Expedted validation.errorCode to be a String");if(!angular.isString(b.regex))throw new TypeError("Expedted validation.regex to be a String");var c=new RegExp(b.regex);return a(b.errorCode,function(a,b,d){return c.test(a+"")})}return b}]).factory("dValidationWrapperFactory",function(){function a(a,b){function c(){var a;for(a=0;a<d.length;a++)if(!d[a].apply(d[a],arguments))return!1;return!0}var d=[];return c.addValidation=function(a){d.push(a)},angular.isFunction(b)&&d.push(b),c.multiple=!0,c.erroCode=a,c}return a}),angular.module("d-validator").filter("dUnderscoreToCamelCase",function(){function a(a){if(!angular.isString(a))throw new TypeError("expected input to be a String.");return a.toLowerCase().replace(/(\_[a-zA-Z])/g,function(a){return a.toUpperCase().replace("_","")})}return a}).filter("dCamelCaseToUnderscore",function(){function a(a){if(!angular.isString(a))throw new TypeError("expected input to be a String.");return a.replace(/([A-Z])/g,function(a){return"_"+a}).toUpperCase()}return a});